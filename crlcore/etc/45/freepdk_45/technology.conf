# -*- Mode:Python; explicit-buffer-name: "technology.conf<freepdk_45>" -*-
#
# FreePDK 45 nanometers.
#
# Provides standard settings for:
# - <viewerConfig>
# - <realLayersTable>
# - <compositeLayersTable>
# - <symbolicLayersTable>

from Hurricane import DbU

# Contains the layers
execfile( helpers.sysConfDir+'/common/technology.conf' )

helpers.micronsMode()


technoConfig = { 'name'          : 'freepdk_45'
               , 'gridValue'     : 0.0025
               , 'gridUnit'      : DbU.UnitPowerMicro
               , 'gridsPerLambda': 18
               }


# Format of <layersExtensionsTable>:
#    Each entry is a pair of (string, value).
#    * string: a synthetic way to designate the real or symbolic layer on
#              which it applies, an optional sub layer (BasicLayer) in case
#              where there is more than one, and the dimension name.
#    * value : the rule (dimension) value. If the main layer is symbolic it
#              must be expressed in lambda, if it is for a real layers it
#              must be expressed in microns.

layersExtensionsTable = \
    ( ('NWELL.nWell.extention.cap'          ,  0.0)
    , ('PWELL.pWell.extention.cap'          ,  0.0)

    , ('NTIE.minimum.width'                 ,  3.0)
    , ('NTIE.nWell.extention.cap'           ,  1.5)
    , ('NTIE.nWell.extention.width'         ,  0.5)
    , ('NTIE.nImplant.extention.cap'        ,  1.0)
    , ('NTIE.nImplant.extention.width'      ,  0.5)
    , ('NTIE.active.extention.cap'          ,  0.5)
    , ('NTIE.active.extention.width'        ,  0.0)

    , ('PTIE.minimum.width'                 ,  3.0)
    , ('PTIE.pWell.extention.cap'           ,  1.5)
    , ('PTIE.pWell.extention.width'         ,  0.5)
    , ('PTIE.pImplant.extention.cap'        ,  1.0)
    , ('PTIE.pImplant.extention.width'      ,  0.5)
    , ('PTIE.active.extention.cap'          ,  0.5)
    , ('PTIE.active.extention.width'        ,  0.0)

    , ('NDIF.minimum.width'                 ,  3.0)
    , ('NDIF.nImplant.extention.cap'        ,  1.0)
    , ('NDIF.nImplant.extention.width'      ,  0.5)
    , ('NDIF.active.extention.cap'          ,  0.5)
    , ('NDIF.active.extention.width'        ,  0.0)

    , ('PDIF.minimum.width'                 ,  3.0)
    , ('PDIF.pImplant.extention.cap'        ,  1.0)
    , ('PDIF.pImplant.extention.width'      ,  0.5)
    , ('PDIF.active.extention.cap'          ,  0.5)
    , ('PDIF.active.extention.width'        ,  0.0)

    , ('GATE.minimum.width'                 ,  1.0)
    , ('GATE.poly.extention.cap'            ,  1.5)

    , ('NTRANS.minimum.width'               ,  1.0)
    , ('NTRANS.nImplant.extention.cap'      , -1.0)
    , ('NTRANS.nImplant.extention.width'    ,  2.5)
    , ('NTRANS.active.extention.cap'        , -1.5)
    , ('NTRANS.active.extention.width'      ,  2.0)

    , ('PTRANS.minimum.width'               ,  1.0)
    , ('PTRANS.nWell.extention.cap'         , -1.0)
    , ('PTRANS.nWell.extention.width'       ,  4.5)
    , ('PTRANS.pImplant.extention.cap'      , -1.0)
    , ('PTRANS.pImplant.extention.width'    ,  4.0)
    , ('PTRANS.active.extention.cap'        , -1.5)
    , ('PTRANS.active.extention.width'      ,  3.0)

    , ('POLY.minimum.width'                 ,  1.0)
    , ('POLY.poly.extention.cap'            ,  0.5)
    , ('POLY2.minimum.width'                ,  1.0)
    , ('POLY2.poly.extention.cap'           ,  0.5)

    # Routing Layers (symbolic).
    , ('METAL1.minimum.width'               ,  1.0)
    , ('METAL1.metal1.extention.cap'        ,  0.5)
    , ('METAL2.minimum.width'               ,  1.0)
    , ('METAL2.metal2.extention.cap'        ,  1.0)
    , ('METAL3.minimum.width'               ,  1.0)
    , ('METAL3.metal3.extention.cap'        ,  1.0)
    , ('METAL4.minimum.width'               ,  1.0)
    , ('METAL4.metal4.extention.cap'        ,  1.0)
    , ('METAL5.minimum.width'               ,  2.0)
    , ('METAL5.metal5.extention.cap'        ,  1.0)
    , ('METAL6.minimum.width'               ,  2.0)
    , ('METAL6.metal6.extention.cap'        ,  1.0)
    , ('METAL7.minimum.width'               ,  2.0)
    , ('METAL7.metal7.extention.cap'        ,  1.0)
    , ('METAL8.minimum.width'               ,  2.0)
    , ('METAL8.metal8.extention.cap'        ,  1.0)
    , ('METAL9.minimum.width'               ,  2.0)
    , ('METAL9.metal9.extention.cap'        ,  1.0)
    , ('METAL10.minimum.width'              ,  2.0)
    , ('METAL10.metal10.extention.cap'      ,  1.0)

    # Contacts (i.e. Active <--> Metal) (symbolic).
    , ('CONT_BODY_N.minimum.side'           ,  1.0)
    , ('CONT_BODY_N.nWell.enclosure'        ,  1.5)
    , ('CONT_BODY_N.nImplant.enclosure'     ,  1.5)
    , ('CONT_BODY_N.active.enclosure'       ,  1.0)
    , ('CONT_BODY_N.metal1.enclosure'       ,  0.5)

    , ('CONT_BODY_P.minimum.side'           ,  1.0)
    , ('CONT_BODY_P.pWell.enclosure'        ,  1.5)
    , ('CONT_BODY_P.pImplant.enclosure'     ,  1.5)
    , ('CONT_BODY_P.active.enclosure'       ,  1.0)
    , ('CONT_BODY_P.metal1.enclosure'       ,  0.5)

    , ('CONT_DIF_N.minimum.side'            ,  1.0)
    , ('CONT_DIF_N.nImplant.enclosure'      ,  1.0)
    , ('CONT_DIF_N.active.enclosure'        ,  0.5)
    , ('CONT_DIF_N.metal1.enclosure'        ,  0.5)

    , ('CONT_DIF_P.minimum.side'            ,  1.0)
    , ('CONT_DIF_P.pImplant.enclosure'      ,  1.0)
    , ('CONT_DIF_P.active.enclosure'        ,  0.5)
    , ('CONT_DIF_P.metal1.enclosure'        ,  0.5)

    , ('CONT_POLY.minimum.width'            ,  1.0)
    , ('CONT_POLY.poly.enclosure'           ,  0.5)
    , ('CONT_POLY.metal1.enclosure'         ,  0.5)

    # VIAs (i.e. Metal <--> Metal) (symbolic).
    , ('VIA12.minimum.side'                 ,  1.0)
    , ('VIA12.metal1.enclosure'             ,  0.5)
    , ('VIA12.metal2.enclosure'             ,  0.5)
    , ('VIA23.minimum.side'                 ,  1.0)
    , ('VIA23.metal2.enclosure'             ,  0.5)
    , ('VIA23.metal3.enclosure'             ,  0.5)
    , ('VIA34.minimum.side'                 ,  1.0)
    , ('VIA34.metal3.enclosure'             ,  0.5)
    , ('VIA34.metal4.enclosure'             ,  0.5)
    , ('VIA45.minimum.side'                 ,  1.0)
    , ('VIA45.metal4.enclosure'             ,  0.5)
    , ('VIA45.metal5.enclosure'             ,  0.5)
    , ('VIA56.minimum.side'                 ,  1.0)
    , ('VIA56.metal5.enclosure'             ,  0.5)
    , ('VIA56.metal6.enclosure'             ,  0.5)
    , ('VIA67.minimum.side'                 ,  1.0)
    , ('VIA67.metal6.enclosure'             ,  0.5)
    , ('VIA67.metal7.enclosure'             ,  0.5)
    , ('VIA78.minimum.side'                 ,  1.0)
    , ('VIA78.metal7.enclosure'             ,  0.5)
    , ('VIA78.metal8.enclosure'             ,  0.5)
    , ('VIA89.minimum.side'                 ,  1.0)
    , ('VIA89.metal8.enclosure'             ,  0.5)
    , ('VIA89.metal9.enclosure'             ,  0.5)
    , ('VIA910.minimum.side'                ,  1.0)
    , ('VIA910.metal9.enclosure'            ,  0.5)
    , ('VIA910.metal10.enclosure'           ,  0.5)

    # VIAs (i.e. Metal <--> Metal) (real).
    , ('via12.minimum.side'                 ,  0.065)
    , ('via12.metal1.enclosure'             ,  0.0  )
    , ('via12.metal2.enclosure'             ,  0.025)
    , ('via23.minimum.side'                 ,  0.070)
    , ('via23.metal2.enclosure'             ,  0.0  )
    , ('via23.metal3.enclosure'             ,  0.035)
    , ('via34.minimum.side'                 ,  0.070)
    , ('via34.metal3.enclosure'             ,  0.0  )
    , ('via34.metal4.enclosure'             ,  0.035)
    , ('via45.minimum.side'                 ,  0.140)
    , ('via45.metal4.enclosure'             ,  0.0  )
    , ('via45.metal5.enclosure'             ,  0.0  )
    , ('via56.minimum.side'                 ,  0.140)
    , ('via56.metal5.enclosure'             ,  0.0  )
    , ('via56.metal6.enclosure'             ,  0.0  )
    , ('via67.minimum.side'                 ,  0.140)
    , ('via67.metal6.enclosure'             ,  0.0  )
    , ('via67.metal7.enclosure'             ,  0.130)
    , ('via78.minimum.side'                 ,  0.200)
    , ('via78.metal7.enclosure'             ,  0.0  )
    , ('via78.metal8.enclosure'             ,  0.0  )
    , ('via89.minimum.side'                 ,  0.200)
    , ('via89.metal8.enclosure'             ,  0.0  )
    , ('via89.metal9.enclosure'             ,  0.200)
    , ('via910.minimum.side'                ,  0.400)
    , ('via910.metal9.enclosure'            ,  0.0  )
    , ('via910.metal10.enclosure'           ,  0.0  )

    # Blockages (symbolic).
    , ('BLOCKAGE1.minimum.width'            ,  1.0)
    , ('BLOCKAGE1.blockage1.extention.cap'  ,  0.5)
    , ('BLOCKAGE2.minimum.width'            ,  2.0)
    , ('BLOCKAGE2.blockage2.extention.cap'  ,  0.5)
    , ('BLOCKAGE3.minimum.width'            ,  2.0)
    , ('BLOCKAGE3.blockage3.extention.cap'  ,  0.5)
    , ('BLOCKAGE4.minimum.width'            ,  2.0)
    , ('BLOCKAGE4.blockage4.extention.cap'  ,  0.5)
    , ('BLOCKAGE5.minimum.width'            ,  2.0)
    , ('BLOCKAGE5.blockage5.extention.cap'  ,  1.0)
    , ('BLOCKAGE6.minimum.width'            ,  2.0)
    , ('BLOCKAGE6.blockage6.extention.cap'  ,  1.0)
    , ('BLOCKAGE7.minimum.width'            ,  2.0)
    , ('BLOCKAGE7.blockage7.extention.cap'  ,  1.0)
    , ('BLOCKAGE8.minimum.width'            ,  2.0)
    , ('BLOCKAGE8.blockage8.extention.cap'  ,  1.0)
    , ('BLOCKAGE9.minimum.width'            ,  2.0)
    , ('BLOCKAGE9.blockage9.extention.cap'  ,  1.0)
    , ('BLOCKAGE10.minimum.width'           ,  2.0)
    , ('BLOCKAGE10.blockage10.extention.cap',  1.0)
    )


gdsLayersTable = \
    ( ("nWell"   , "NTUB"   ,  5)
    , ("nImplant", "NPLUS"  , 23)
    , ("pImplant", "PPLUS"  , 24)
    , ("active"  , "DIFF"   , 10)
    , ("poly"    , "POLY1"  , 20)
    , ("cut0"    , "CONT"   , 34)
    , ("metal1"  , "MET1"   , 35)
    , ("cut1"    , "VIA1"   , 36)
    , ("metal2"  , "MET2"   , 37)
    , ("metcap"  , "METCAP" , 55)
    , ("cut2"    , "VIA2"   , 38)
    , ("metal3"  , "MET3"   , 39)
    , ("cut3"    , "VIA3"   , 41)
    , ("metal4"  , "MET4"   , 42)
    )


# Format of an entry in the table:
#     (Symbolic_Name, CIF_Name, GDSII_Number)
gdsLayersTable = \
    ( ("pWell"   , "CWN"    ,  2)
    , ("nWell"   , "CWP"    ,  3)
    , ("active"  , "CAA"    ,  1)
    , ("pImplant", "CSP"    ,  5)
    , ("nImplant", "CSN"    ,  4)
    , ("poly"    , "CPG"    ,  9)
    , ("cut0"    , "CCC"    , 10)
    , ("metal1"  , "CM1"    , 11)
    , ("cut1"    , "CV1"    , 12)
    , ("metal2"  , "CM2"    , 13)
    , ("cut2"    , "CV2"    , 14)
    , ("metal3"  , "CM3"    , 15)
    , ("cut3"    , "CV3"    , 16)
    , ("metal4"  , "CM4"    , 17)
    , ("cut4"    , "CV4"    , 18)
    , ("metal5"  , "CM5"    , 19)
    , ("cut5"    , "CV5"    , 20)
    , ("metal6"  , "CM6"    , 21)
    , ("cut6"    , "CV6"    , 22)
    , ("metal7"  , "CM7"    , 23)
    , ("cut7"    , "CV7"    , 24)
    , ("metal8"  , "CM8"    , 25)
    , ("cut8"    , "CV8"    , 26)
    , ("metal9"  , "CM9"    , 27)
    , ("cut9"    , "CV9"    , 28)
    , ("metal10" , "CM10"   , 29)
    )
