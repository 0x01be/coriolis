PROJECT(VLSISAPD)

CMAKE_MINIMUM_REQUIRED(VERSION 2.4.0)

MACRO(SETUP_PROJECT_PATHS project)
  IF( NOT("$ENV{${project}_TOP}" STREQUAL "") )
    MESSAGE("-- ${project}_TOP is set to $ENV{${project}_TOP}")
    SET(PROJECT_MODULE_PATH "${DESTDIR}$ENV{${project}_TOP}/share/cmake/Modules/")
    LIST(INSERT CMAKE_MODULE_PATH 0 "${PROJECT_MODULE_PATH}")
  ENDIF( NOT("$ENV{${project}_TOP}" STREQUAL "") )

  IF( NOT("$ENV{${project}_USER_TOP}" STREQUAL "") )
    MESSAGE("-- ${project}_USER_TOP is set to $ENV{${project}_USER_TOP}")
    SET(PROJECT_MODULE_PATH "${DESTDIR}$ENV{${project}_USER_TOP}/share/cmake/Modules/")
    LIST(INSERT CMAKE_MODULE_PATH 0 "${PROJECT_MODULE_PATH}")
  ENDIF( NOT("$ENV{${project}_USER_TOP}" STREQUAL "") )

  LIST(REMOVE_DUPLICATES CMAKE_MODULE_PATH)
ENDMACRO(SETUP_PROJECT_PATHS project)

SETUP_PROJECT_PATHS(BOOTSTRAP)

LIST(INSERT CMAKE_MODULE_PATH 0 "${VLSISAPD_SOURCE_DIR}/cmake_modules")

find_package(Bootstrap REQUIRED)
setup_boost(program_options filesystem python)

FIND_PACKAGE(LibXml2 REQUIRED)
FIND_PACKAGE(PythonLibs REQUIRED)
FIND_PACKAGE(PythonSitePackages REQUIRED)
FIND_PACKAGE(PythonLibs REQUIRED)

FIND_PACKAGE(Doxygen)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(cmake_modules)

IF(BUILD_DOC AND DOXYGEN_FOUND)
  ADD_SUBDIRECTORY(doc)
  ADD_SUBDIRECTORY(examples)
ENDIF(BUILD_DOC AND DOXYGEN_FOUND)
